{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "adam_asmaca.jpynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyOOONvHUgoX2Sm1Z06Wg8Q7",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/nuri35/bby162-2020/blob/master/adam_asmaca.ipynbv2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RKUg8oHrdW6h",
        "colab_type": "code",
        "outputId": "78666ee6-d9b7-402c-eb00-394f2b76bc4c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        " import random\n",
        " import time\n",
        "print(\"\\n uygulamamız 1.2 versiyon olarak güncellenmiştir.\\n\\n\")\n",
        "print(\"\\n isteğe bağlı olarak Lütfen sisteme giriş yapmak için size verilen güvenlik adlardan birini giriniz.\\n\\n\")\n",
        "\n",
        "print(\"uygulama açılıyor lutfen 2sn bekleyınız\")\n",
        "time.sleep(4) \n",
        "print(\"başlıyabilirsiniz\")\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "sıfreler = [\"bilim\", \"erişim\", \"veri\", \"eğitim\"]\n",
        "kavram = input(\"Bir güvenlik şifresi giriniz: \")\n",
        "if kavram in sıfreler:\n",
        "  print(kavram + \" güvenlik şifresi dogru !\")\n",
        "\n",
        "\n",
        "\n",
        "print(\"Programa devam edebilirsiniz\") \n",
        "\n",
        "\n",
        "print(\"\\n uygulamamıza hoşgeldınız sizler için her gun duzenlı olarak uygulamamızı geliştirmeye çalışıyoruz.\\n\\n\")\n",
        "\n",
        "\n",
        "\n",
        "time.sleep(4)\n",
        "print(\"hazııııııırrrmııııısın\")\n",
        "\n",
        "\n",
        "kelimeler = random.choice( [\"armut\",\"istanbul\",\"Malatya\",\"karpuz\"] )\n",
        "kelimeler = kelimeler.upper()\n",
        "harfsayisi = len(kelimeler)\n",
        "print(\"\\nkelimemiz {} harflidir.\\n\\n\".format(harfsayisi))\n",
        "\n",
        "\n",
        "tahminler = []\n",
        "hata = []\n",
        "\n",
        "deneme = 3\n",
        "\n",
        "while deneme > 0 :\n",
        "\n",
        "\n",
        "\n",
        "    tabela=\"\"\n",
        "\n",
        "    for harf in kelimeler :\n",
        "      if harf in tahminler:\n",
        "        tabela = tabela + harf \n",
        "      else:\n",
        "        tabela = tabela + \"_\"\n",
        "    if tabela == kelimeler:\n",
        "      print(\"kelimeyi dogru bıldın bravo\")\n",
        "      time.sleep(2)\n",
        "      break\n",
        "\n",
        "    print(\"kelimeyi tahmin ediniz\",tabela)\n",
        "    time.sleep(2)\n",
        "    print(deneme,\"canın kaldı\")\n",
        "    time.sleep(2)\n",
        "\n",
        "    tahmin = input(\"bir harf tahmin et\\n>>>\")\n",
        "    tahmin = tahmin.upper()\n",
        "\n",
        "\n",
        "    if tahmin == kelimeler:\n",
        "      print(\"bravo\")\n",
        "      time.sleep(4)\n",
        "      break\n",
        "\n",
        "    if tahmin in tahminler or tahmin in hata:\n",
        "      print(\"{} daha once soylendi.Lutfen Baska Bir Harf Soyle \".format(tahmin))\n",
        "      time.sleep(2)\n",
        "    elif tahmin in kelimeler:\n",
        "      rpt = kelimeler.count(tahmin)\n",
        "      print(\"dogru bravo..{0} harfi kelimemiz içerisinde {1} kere geçiyor\".format(tahmin,rpt))\n",
        "      tahminler.append(tahmin)\n",
        "\n",
        "    else:\n",
        "      print(\"yanlıs. kelimede bu harf yok\")\n",
        "      hata.append(tahmin)\n",
        "      deneme = deneme -1\n",
        "\n",
        "    if deneme == 0:\n",
        "      print(\"hakkınız kalmadı maalesef\")\n",
        "      print(\"kelimemiz {}\".format(kelimeler))\n",
        "      time.sleep(2)\n",
        "    print(\"Oyundan sonlandırmak Istiyorsaniz\\n'H' tusuna basiniz\\nDevam Etmek Icin Baska Bir Tusa Basiniz \")\n",
        "    devam = input(\">>>>\")\n",
        "    devam =devam.upper()\n",
        "\n",
        "    if devam ==\"H\":\n",
        "      print(\"oyun sonlandırıldı\")\n",
        "\n",
        "      break\n",
        "\n",
        "    else:\n",
        "      continue\n",
        "print(\"oyunu tekrar oynamak ıstıyorsanız e ye basınız\")\n",
        "oyunson = input(\">><<>>\")\n",
        "\n",
        "if oyunson ==\"e\":\n",
        "      continue\n",
        "\n",
        "else:\n",
        "  print(\"oyundan cıkıldı\")\n",
        "  break\n",
        "  \n",
        "  \n",
        "  \n",
        "    \n",
        "\n",
        "  \n"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\n",
            " uygulamamız 1.2 versiyon olarak güncellenmiştir.\n",
            "\n",
            "\n",
            "\n",
            " isteğe bağlı olarak Lütfen sisteme giriş yapmak için size verilen güvenlik adlardan birini giriniz.\n",
            "\n",
            "\n",
            "uygulama açılıyor lutfen 2sn bekleyınız\n",
            "başlıyabilirsiniz\n",
            "Bir güvenlik şifresi giriniz: asd\n",
            "Programa devam edebilirsiniz\n",
            "\n",
            " uygulamamıza hoşgeldınız sizler için her gun duzenlı olarak uygulamamızı geliştirmeye çalışıyoruz.\n",
            "\n",
            "\n",
            "hazııııııırrrmııııısın\n",
            "\n",
            "kelimemiz 6 harflidir.\n",
            "\n",
            "\n",
            "kelimeyi tahmin ediniz ______\n",
            "3 canın kaldı\n",
            "bir harf tahmin et\n",
            ">>>a\n",
            "dogru bravo..A harfi kelimemiz içerisinde 1 kere geçiyor\n",
            "Oyundan sonlandırmak Istiyorsaniz\n",
            "'H' tusuna basiniz\n",
            "Devam Etmek Icin Baska Bir Tusa Basiniz \n",
            ">>>>s\n",
            "kelimeyi tahmin ediniz _A____\n",
            "3 canın kaldı\n",
            "bir harf tahmin et\n",
            ">>>q\n",
            "yanlıs. kelimede bu harf yok\n",
            "Oyundan sonlandırmak Istiyorsaniz\n",
            "'H' tusuna basiniz\n",
            "Devam Etmek Icin Baska Bir Tusa Basiniz \n",
            ">>>>z\n",
            "kelimeyi tahmin ediniz _A____\n",
            "2 canın kaldı\n",
            "bir harf tahmin et\n",
            ">>>x\n",
            "yanlıs. kelimede bu harf yok\n",
            "Oyundan sonlandırmak Istiyorsaniz\n",
            "'H' tusuna basiniz\n",
            "Devam Etmek Icin Baska Bir Tusa Basiniz \n",
            ">>>>a\n",
            "kelimeyi tahmin ediniz _A____\n",
            "1 canın kaldı\n",
            "bir harf tahmin et\n",
            ">>>ü\n",
            "yanlıs. kelimede bu harf yok\n",
            "hakkınız kalmadı maalesef\n",
            "kelimemiz KARPUZ\n",
            "Oyundan sonlandırmak Istiyorsaniz\n",
            "'H' tusuna basiniz\n",
            "Devam Etmek Icin Baska Bir Tusa Basiniz \n",
            ">>>>r\n",
            "oyunu tekrar oynamak ıstıyorsanız e ye basınız\n",
            ">><<>>e\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-44-06047ea80f41>\"\u001b[0;36m, line \u001b[0;32m107\u001b[0m\n\u001b[0;31m    continue\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m 'continue' not properly in loop\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MvCqwUKVKpYs",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}